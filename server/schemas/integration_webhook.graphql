type WebhookTrigger {
  onItemCreate: Boolean
  onItemUpdate: Boolean
  onItemDelete: Boolean
  onAssetUpload: Boolean
  onAssetDecompress: Boolean
  onAssetDeleted: Boolean
  onItemPublish: Boolean
  onItemUnPublish: Boolean
}

type Webhook {
  id: ID!
  name: String!
  url: URL!
  active: Boolean!
  trigger: WebhookTrigger!
  createdAt: DateTime!
  updatedAt: DateTime!
}

# Inputs

input WebhookTriggerInput {
  onItemCreate: Boolean
  onItemUpdate: Boolean
  onItemDelete: Boolean
  onAssetUpload: Boolean
  onAssetDecompress: Boolean
  onAssetDeleted: Boolean
  onItemPublish: Boolean
  onItemUnPublish: Boolean
}

input CreateWebhookInput {
  integrationId: ID!
  name: String!
  url: URL!
  active: Boolean!
  trigger: WebhookTriggerInput!
}

input UpdateWebhookInput {
  integrationId: ID!
  webhookId: ID!
  name: String
  url: URL
  active: Boolean
  trigger: WebhookTriggerInput
}

input DeleteWebhookInput {
  integrationId: ID!
  webhookId: ID!
}

# Payload
type WebhookPayload {
  webhook: Webhook!
}

type DeleteWebhookPayload {
  webhookId: ID!
}

# extend type Query {}

extend type Mutation {
  createWebhook(input: CreateWebhookInput!): WebhookPayload
  updateWebhook(input: UpdateWebhookInput!): WebhookPayload
  deleteWebhook(input: DeleteWebhookInput!): DeleteWebhookPayload
}
