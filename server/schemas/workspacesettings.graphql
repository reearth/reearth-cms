type WorkspaceSettings {
    id: ID! # same as workspaceId
    tiles: TilesList
    terrains: TerrainsList
}

type Tile {
	id: ID!
    type: String!
	name: String!
	url: String!
	image: String!
}

type TilesList {
    tiles: [Tile!]!
    selectedTile: ID
}

type Terrain {
	id: ID!
    type: String!
    cesiumIonAssetId: String!
    cesiumIonAccessToken: String!
	url: String!
	image: String!
}

type TerrainsList {
    Terrains: [Terrain!]!
    selectedTerrain: ID
    enabled: Boolean!
}

type UpdateWorkspaceSettingsPayload {
    workspaceSettings: WorkspaceSettings!
}

# Inputs
input TilesListInput {
    tiles: [TileInput!]!
    selectedTile: ID
}

input TileInput {
    id: ID!
    type: String!
    name: String!
    url: String!
    image: String!
}

input TerrainsListInput {
    terrains: [TerrainInput!]!
    selectedTerrain: ID
    enabled: Boolean!
}

input TerrainInput {
    id: ID!
    type: String!
    cesiumIonAssetId: String!
    cesiumIonAccessToken: String!
    url: String!
    image: String!
}

input UpdateWorkspaceSettingsInput {
    workspaceId: ID!
    tiles: TilesListInput
    terrains: TerrainsListInput
}

extend type Mutation {
    updateWorkspaceSettings(input: UpdateWorkspaceSettingsInput!): UpdateWorkspaceSettingsPayload
}