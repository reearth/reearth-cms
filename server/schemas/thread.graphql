type Thread {
  id: ID!
  workspace: Workspace
  workspaceId: ID!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  author: User
  authorId: ID!
  content: String!
  createdAt: DateTime!
}

input CreateThreadInput {
  workspaceId: ID!
}

input AddCommentInput {
  threadId: ID!
  content: String!
}

input UpdateCommentInput {
  threadId: ID!
  commentId: ID!
  content: String!
}

input DeleteCommentInput {
  threadId: ID!
  commentId: ID!
}

type CreateThreadPayload {
  thread: Thread!
}

type AddCommentPayload {
  comment: Comment!
}

type UpdateCommentPayload {
  comment: Comment!
}

type DeleteCommentPayload {
  commentId: ID!
}

extend type Mutation {
  createThread(input: CreateThreadInput!): CreateThreadPayload
  addComment(input: AddCommentInput!): AddCommentPayload
  updateComment(input: UpdateCommentInput!): UpdateCommentPayload
  deleteComment(input: DeleteCommentInput!): DeleteCommentPayload
}