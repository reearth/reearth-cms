name: deploy-aws
on:
  pull_request:
    branches: [ main ]
env:
  #  @TODO
  # server
  IMAGE: reearth/reearth-cms:nightly
  IMAGE_AWS: reearth-cms-test-server:latest
  # worker
  WORKER_IMAGE: reearth/reearth-cms-worker:nightly
  WORKER_IMAGE_AWS: reearth-cms-test-worker:latest
#  AWS_DEST: ""

jobs:

  #  deploy_web:
  #    name: Deploy web to test env
  #    if: github.event.repository.full_name == 'reearth/reearth-cms' && github.event.workflow_run.name == 'ci-web' && github.event.workflow_run.conclusion != 'failure' && github.event.workflow_run.head_branch == 'main'
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: get latest web artifact
  #        uses: dawidd6/action-download-artifact@v2.24.0
  #        with:
  #          github_token: ${{ secrets.GPT }}
  #          workflow: ci_web.yml
  #          workflow_conclusion: success
  #          branch: main
  #          name: reearth-cms-web
  #          check_artifacts: true
  #          search_artifacts: true
  #      - name: Extract
  #        run: tar -xvf reearth-cms-web.tar.gz
  #      - name: Set AWS credentials
  #        uses: aws-actions/configure-aws-credentials@v1
  #        with:
  #          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #          aws-region: $AWS_REGION
  #      - name: Set up Cloud SDK
  #        uses: google-github-actions/setup-gcloud@v0
  #      - name: Deploy
  #        run: gsutil -m -h "Cache-Control:no-store" rsync -x "^reearth_config\\.json$" -dr reearth-cms-web/ $GCS_DEST

  deploy_server:
    name: Deploy server to AWS
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: docker pull, push to ECR
        run: |
          docker pull $IMAGE
          docker tag $IMAGE ${{ steps.login-ecr.outputs.registry }}/$IMAGE_AWS
          docker push ${{ steps.login-ecr.outputs.registry }}/$IMAGE_AWS

  deploy_worker:
    name: Deploy worker to AWS
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: docker pull, push to ECR
        run: |
          docker pull $WORKER_IMAGE
          docker tag $WORKER_IMAGE ${{ steps.login-ecr.outputs.registry }}/$WORKER_IMAGE_AWS
          docker push ${{ steps.login-ecr.outputs.registry }}/$WORKER_IMAGE_AWS
