name: server_build
on:
  pull_request:
    paths:
      - server/**
      - .github/workflows/server_build.yml

jobs:
  info:
    name: Collect information
    runs-on: ubuntu-latest
    if: github.event.repository.full_name == 'reearth/reearth-cms'
    outputs:
      sha_short: ${{ steps.info.outputs.sha_short }}
      new_tag: ${{ steps.info.outputs.new_tag }}
      new_tag_short: ${{ steps.info.outputs.new_tag_short }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Fetch tags
        run: git fetch --prune --unshallow --tags
      - name: Get info
        id: info
        # The tag name should be retrieved lazily, as tagging may be delayed.
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          TAG=$(git tag --points-at HEAD)
          if [[ ! -z "$TAG" ]]; then
            echo "::set-output name=new_tag::$TAG"
            echo "::set-output name=new_tag_short::${TAG#v}"
          fi
      - name: Show info
        env:
          SHA_SHORT: ${{ steps.info.outputs.sha_short }}
          NEW_TAG: ${{ steps.info.outputs.new_tag }}
          NEW_TAG_SHORT: ${{ steps.info.outputs.new_tag_short }}
        run: echo "sha_short=$SHA_SHORT, new_tag=$NEW_TAG, new_tag_short=$NEW_TAG_SHORT"
  docker:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs:
      - info
    env:
      IMAGE_NAME: reearth/reearth-cms
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push nightly
        if: "!needs.info.outputs.new_tag"
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./server
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: VERSION=0.0.0-SNAPSHOT-${{ needs.info.outputs.sha_short }}
          tags: ${{ env.IMAGE_NAME }}:nightly
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Get Docker tags
        id: tags
        if: needs.info.outputs.new_tag
        env:
          TAG: ${{ needs.info.outputs.new_tag_short }}
        run: |
          TAGS=$IMAGE_NAME:$TAG
          if [[ ! $TAG =~ '-' ]]; then
            TAGS+=,${IMAGE_NAME}:${TAG%.*}
            TAGS+=,${IMAGE_NAME}:${TAG%%.*}
            TAGS+=,${IMAGE_NAME}:latest
          fi
          echo "::set-output name=tags::$TAGS"
      - name: Build and push release
        if: needs.info.outputs.new_tag
        uses: docker/build-push-action@v2
        with:
          context: ./server
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: VERSION=${{ needs.info.outputs.new_tag_short }}
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=registry,ref=${IMAGE_NAME}:latest
          cache-to: type=inline
