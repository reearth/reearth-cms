name: deploy-test

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target to deploy'
        type: choice
        default: 'all'
        options: ['all', 'server', 'web', 'worker']
  workflow_call:
    inputs:
      target:
        type: string
        default: 'all'
        description: 'Target to deploy'

jobs:
  deploy_server:
    runs-on: ubuntu-latest
    if: github.event.repository.full_name == 'reearth/reearth-cms' && github.ref_name == 'main' && (inputs.target == 'all' || inputs.target == 'server')
    permissions:
      contents: read # To checkout
      id-token: write # To authenticate with Google Cloud using OIDC
    steps:
      - uses: actions/checkout@v5
      - uses: google-github-actions/auth@v3
        with:
          service_account: ${{ secrets.GC_SA_EMAIL }}
          workload_identity_provider: ${{ secrets.GC_WORKLOAD_IDENTITY_PROVIDER }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v3
      - name: Configure docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
      - name: docker push
        run: |
          docker pull ${{ secrets.SERVER_IMAGE }}
          docker tag ${{ secrets.SERVER_IMAGE }} ${{ secrets.SERVER_IMAGE_GC }}
          docker push ${{ secrets.SERVER_IMAGE_GC }}
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy reearth-cms-backend \
            --image ${{ secrets.SERVER_IMAGE_GC }} \
            --region ${{ secrets.GC_REGION }} \
            --platform managed \
            --quiet
      - name: Deploy to Internal API Cloud Run
        run: |
          gcloud run deploy reearth-cms-internal-api \
            --image ${{ secrets.SERVER_IMAGE_GC }} \
            --region ${{ secrets.GC_REGION }} \
            --platform managed \
            --quiet

  deploy_web:
    runs-on: ubuntu-latest
    if: github.event.repository.full_name == 'reearth/reearth-cms' && github.ref_name == 'main' && (inputs.target == 'all' || inputs.target == 'web')
    permissions:
      contents: read # To checkout
      id-token: write # To authenticate with Google Cloud using OIDC
    steps:
      - uses: actions/checkout@v5
      - uses: google-github-actions/auth@v3
        with:
          service_account: ${{ secrets.GC_SA_EMAIL }}
          workload_identity_provider: ${{ secrets.GC_WORKLOAD_IDENTITY_PROVIDER }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v3
      - name: Configure docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
      - name: docker push
        run: |
          docker pull ${{ secrets.WEB_IMAGE }}
          docker tag ${{ secrets.WEB_IMAGE }} ${{ secrets.WEB_IMAGE_GC }}
          docker push ${{ secrets.WEB_IMAGE_GC }}
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@9c5864eab7354d2e132307e685a2272655932799 # v2.7.3
        with:
          service: reearth-cms-web
          skip_default_labels: true
          image: ${{ secrets.WEB_IMAGE_GC }}
          region: ${{ secrets.GC_REGION }}
          revision_traffic: 'LATEST=100'

  deploy_worker:
    runs-on: ubuntu-latest
    if: github.event.repository.full_name == 'reearth/reearth-cms' && github.ref_name == 'main' && (inputs.target == 'all' || inputs.target == 'worker')
    permissions:
      contents: read # To checkout
      id-token: write # To authenticate with Google Cloud using OIDC
    steps:
      - uses: actions/checkout@v5
      - uses: google-github-actions/auth@v3
        with:
          service_account: ${{ secrets.GC_SA_EMAIL }}
          workload_identity_provider: ${{ secrets.GC_WORKLOAD_IDENTITY_PROVIDER }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v3
      - name: Configure docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
      - name: docker push
        run: |
          docker pull ${{ secrets.WORKER_IMAGE }}
          docker tag ${{ secrets.WORKER_IMAGE }} ${{ secrets.WORKER_IMAGE_GC }}
          docker push ${{ secrets.WORKER_IMAGE_GC }}
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy reearth-cms-worker \
            --image ${{ secrets.WORKER_IMAGE_GC }} \
            --region ${{ secrets.GC_REGION }} \
            --platform managed \
            --quiet
