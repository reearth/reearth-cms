name: build
on:
  push:
    branches: [main, release]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.workflow_run.head_branch }}
  cancel-in-progress: true

jobs:
  info:
    name: Collect information
    runs-on: ubuntu-latest
    if: github.event.repository.full_name == 'reearth/reearth-cms' && !startsWith(github.event.head_commit.message, 'v')
    outputs:
      sha_short: ${{ steps.info.outputs.sha_short }}
      new_tag: ${{ steps.info.outputs.new_tag }}
      new_tag_short: ${{ steps.info.outputs.new_tag_short }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Fetch tags
        run: git fetch --prune --unshallow --tags
      - name: Get info
        id: info
        # The tag name should be retrieved lazily, as tagging may be delayed.
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          if [[ "$BRANCH" = "release" ]]; then
            TAG=$(git tag --points-at HEAD)
            if [[ ! -z "$TAG" ]]; then
              echo "::set-output name=tag::$TAG"
              echo "::set-output name=tag_short::${TAG#v}"
            else
              echo "::set-output name=name::rc"
            fi
          else
            echo "::set-output name=name::nightly"
          fi
      - name: Show info
        env:
          SHA_SHORT: ${{ steps.info.outputs.sha_short }}
          NEW_TAG: ${{ steps.info.outputs.new_tag }}
          NEW_TAG_SHORT: ${{ steps.info.outputs.new_tag_short }}
        run: echo "sha_short=$SHA_SHORT, new_tag=$NEW_TAG, new_tag_short=$NEW_TAG_SHORT"

  server:
    if: needs.info.outputs.name || needs.info.outputs.tag
    name: Build Server
    runs-on: ubuntu-latest
    needs:
      - info
    env:
      ARTIFACTS: dist/reearth-cms_*.*
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --rm-dist ${{ env.SNAPSHOT }}
          workdir: server
        env:
          SNAPSHOT: ${{ !needs.info.outputs.tag && '--snapshot' || '' }}
          GORELEASER_CURRENT_TAG: ${{ needs.info.outputs.tag || '0.0.0' }}
      - name: Rename artifacts
        if: needs.info.outputs.name
        working-directory: server
        run: for f in $ARTIFACTS; do mv $f $(echo $f | sed -E 's/_0\.0\.0-SNAPSHOT-[^_]*/_${{ needs.info.outputs.name }}/'); done
      - uses: actions/upload-artifact@v3
        with:
          name: server-build
          path: server/${{ env.ARTIFACTS }}

  web:
    if: needs.info.outputs.name || needs.info.outputs.tag
    name: Build Web
    runs-on: ubuntu-latest
    needs:
      - info
    env:
      ARTIFACTS: reearth-cms_web.tar.gz
    steps:
      - uses: actions/checkout@v3
      - run: tar -zcvf $ARTIFACTS web
      - uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: $ARTIFACTS

  release:
    if: needs.info.outputs.name || needs.info.outputs.tag
    name: release
    runs-on: ubuntu-latest
    needs:
      - server
      - web
    env:
      ARTIFACTS: reearth-cms_*.*
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: server-build

      - uses: actions/download-artifact@v3
        with:
          name: web-build

      - name: Release nightly/rc
        if: needs.info.outputs.name
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ env.ARTIFACTS }}
          commit: ${{ github.sha }}
          name: ${{ needs.info.outputs.name }}
          tag: ${{ needs.info.outputs.name }}
          body: ${{ github.sha }}
          prerelease: true

      - name: Download latest changelog
        if: needs.info.outputs.tag
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: release.yml
          name: changelog-${{ needs.info.outputs.tag }}

      - name: Create GitHub release
        if: needs.info.outputs.tag
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ env.ARTIFACTS }}
          commit: ${{ github.sha }}
          name: ${{ needs.info.outputs.tag }}
          tag: ${{ needs.info.outputs.tag }}
          bodyFile: CHANGELOG_latest.md
